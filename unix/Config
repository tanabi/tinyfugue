###########################################################################
# 
#  TinyFugue configuration file
# 
###########################################################################
# 
#  The tfconfig script can usually figure out everything it needs to know
#  about your system, so you probably won't need to edit this file unless
#  you want to change some defaults or enable some optional features.
#  See the README file if you have problems or want to make any changes.
#
#  Just type "make" to install everything.
#
#  If you edit anything, make sure everything on the right side of a
#  assignment is enclosed in quotes.  In the instructions, "uncomment"
#  means remove the "#" character from the beginning of the line.
# 
###########################################################################


### File Locations.
# Default locations for files are /usr/local/{bin,lib} if writable,
#   or ~$USER/{bin,lib} if they exist, or ~$USER.  So you probably don't
#   need to edit this.  To change any file location, uncomment and edit
#   the appropriate line below.
# Do NOT under any circumstances attempt to install files in the build
#   tree (i.e., the directory unpacked from the archive).
# If SYMLINK is defined, a symbolic link to the executable file will be
#   created with that name.
# For public installation, I recommend uncommenting the names below.
#   TFVER is pre-defined, and contains an abbreviated version number.
#   Using numbered filenames makes it easier to install a new version
#   even if an old version is currently in use.  You can remove
#   the old version manually later when it is no longer in use.

# TF="/usr/local/bin/tf-${TFVER}"
# LIBDIR="/usr/local/lib/tf-${TFVER}-lib"
# SYMLINK="/usr/local/bin/tf"


### Manual Page.
# Man page will not be installed by default.  To have it installed,
# uncomment and edit the lines below.  Set MANTYPE=nroff if your man
# uses nroff format; set MANTYPE=cat if your man uses pre-formatted
# vt100 "catman" pages.  Default is "cat".

# MANTYPE="nroff"
# MANPAGE="/usr/local/man/man1/tf.1"


### Flags.
# This is the place to add flags as instructed by the README file.

FLAGS=''


### Unwanted Features.
# TF can be made slightly smaller at the expense of losing functionality.
# Uncomment one or more of the lines below to disable a feature.
# See also "Terminal Handling".

# FLAGS="$FLAGS -DNO_HISTORY"; # Disable /recall, /log, ^P, etc.
# FLAGS="$FLAGS -DNO_PROCESS"; # Disable /repeat and /quote.
# FLAGS="$FLAGS -DNO_NETDB"  ; # Disable hostname resolving and service names.
# FLAGS="$FLAGS -DNO_FLOAT"  ; # Disable floating point math.


### Terminal Driver.
# The tfconfig script can usually figure this out by itself.  You only need to
# uncomment one of these lines if tfconfig figures incorrectly.

# TTYDRIVER='USE_TERMIOS'
# TTYDRIVER='USE_TERMIO'
# TTYDRIVER='USE_SGTTY'


### Terminal Handling.
# By default, tfconfig will try to use one of several different libraries
# with termcap interfaces, including termcap, ncurses, and curses; if they
# all fail, tfconfig will choose "HARDCODE TERM_vt100".  You can explicitly
# set TERMINAL below to the name of a termcap-compatible library or to one
# of the HARDCODE options.  With HARDCODE, TF will work only on the
# corresponding terminal type.  Some space can be saved (at the expense of
# flexibility) by using HARDCODE.

# TERMINAL='your_termcap_library'
# TERMINAL='HARDCODE TERM_vt100'
# TERMINAL='HARDCODE TERM_vt220'
# TERMINAL='HARDCODE TERM_ansi'


### Mail Directory.
# If the MAIL environment variable is set at runtime, TF will use that.
# Otherwise, TF will assume mail is kept in a central spool directory.
# Normally, the tfconfig script can find the mail directory by itself;
# you only need to set MAILDIR below if your system keeps mail in an unusual
# place.  If it keeps incoming mail in the recipient's home, see the example
# in tf-lib/local-eg.tf.

# MAILDIR='/weird/mail/directory'


### Compiler.
# If you do not specify CC here, tfconfig will use "gcc" if available,
# otherwise "cc".  If for some strange reason gcc is installed on your
# system but doesn't work, use "cc" (and complain to your sysadmin).
# If you do not specify CCFLAGS here, tfconfig will use "-O".

# If unixmake told you to set CC=cc, be sure to uncomment the line below
# by removing the leading "#".

# CC=cc
# CCFLAGS="-g"


### Stripping.
# tfconfig will use "strip" on the tf binary unless you tell it otherwise.
# Set STRIP='' to disable stripping.

# STRIP=''


### Other Compiler Libraries.
# This is the place to add extra libraries as described in unix/README
# if your linker can't resolve an external reference.

LIBS='-lssl -lcrypto'


### Make Program.

MAKE='make'


### SOCKS connection proxy for firewalls.
# If you use rtelnet instead of telnet to connect to outside hosts, you
# probably want SOCKS support.
# Uncomment one set of SOCKS line below to enable SOCKS support.
# If you have a SOCKS version earlier than 4.2beta or later, do not uncomment
# the SOCKS_NONBLOCK line below to allow nonblocking connects.
# You may need to edit SOCKSLIBDIR and SOCKSINCDIR.

### SOCKS version 5
# SOCKS='5'
# SOCKSLIB='-lsocks5'
# SOCKSLIBDIR='-L/usr/local/lib'
# SOCKSINCDIR='-I/usr/local/include'
# SOCKS_NONBLOCK='yes'

### SOCKS version 4
# SOCKS='4'
# SOCKSLIB='-lsocks'
# SOCKSLIBDIR='-L/usr/local/lib'
# SOCKS_NONBLOCK='yes'


###
if [ -z "$TFVERSION" ]; then
    echo "Use 'sh unixmake' to install TinyFugue."
fi
